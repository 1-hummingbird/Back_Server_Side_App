#written in 2024-09-12

name: Build and Deploy

on:
  pull_request:
    types: [closed]
    branches: [ "main" ]
  workflow_dispatch:

permissions:  
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    ## create application-prod.yml
    - name: make application-prod.yml
      run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yaml
          echo '${{ secrets.PROPERTIES_PROD }}' > ./application.yaml
      shell: bash
      
    ## gradle caching - 빌드 시간 향상
    - name: Gradle Caching
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-  
    
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Build Docker image
      run: docker build -t our-springapp:latest .

    - name: Save Docker image to file
      run: docker save our-springapp:latest -o our-springapp.tar

    - name: Copy Docker image to EC2
      run: scp -i ${{ secrets.EC2_SSH_KEY }} our-springapp.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/our-springapp.tar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Copy Docker image to EC2
      run: scp -i ${{ secrets.EC2_SSH_KEY }} our-springapp.tar ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/our-springapp.tar

    - name: SSH into EC2 and load Docker image
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          docker load -i /home/${{ secrets.EC2_USER }}/our-springapp.tar
          docker run -d --name our-springapp -p 80:8080 -p 433:8081 our-springapp:latest
